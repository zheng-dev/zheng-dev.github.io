<!-- index.html zheng6655@163.com -->
<!DOCTYPE html>
<html lang="zh_cn">

<head>
    <title>english</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />

    <!-- 自定义应用图标可用 -->
    <link rel="apple-touch-icon-precomposed" sizes="120x120" href="//favicon.ico">
    <!-- 全屏设置 -->
    <meta name="viewport"
        content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui" />

    <!-- 网站开启对 web app 程序的支持 具体表现为去除浏览器地址栏和底部导航栏 ：先保存为桌面书签，然后通过书签打开即可生效-->
    <meta name="apple-mobile-web-app-capable" content="yes">
    <!-- 用来定义顶部状态栏的形式默认是default为白色 black为黑色 black-translucent为灰色半透明（会占据屏幕的约20px，不同的设备可能会有差异）-->
    <!-- 在定义了apple-mobile-web-app-capable的前提下，设置状态栏的属性值apple-mobile-web-app-status-bar-style才有效； -->

    <meta charset="UTF-8" />
    <style type="text/css">
        #text_list li {
            text-align: left;
        }
    </style>

    <script type="text/javascript">
        let utterance = new SpeechSynthesisUtterance();
        window.speechSynthesis.getVoices();//触发语言包异步加载
        //语速，取值范围(0.1 - 10) 默认值：1
        utterance.rate = 0.7;
        //音调，取值范围(0 - 2) 默认值：1
        //utterance.pitch = 0;

        //音量，取值范围(0 - 1) 默认值：0.5
        utterance.volume = 1;

        //[108];//Microsoft Sonia Online (Natural) - English (United Kingdom)
        //[110];//Microsoft Aria Online (Natural) - English (United States)
        let us, gb;//全局初始
        function init_v() {
            if (typeof (us) == 'undefined') {
                let voices1 = window.speechSynthesis.getVoices(); // 获取语言包
                for (let index = 0; index < voices1.length; index++) {
                    const element = voices1[index];
                    if (element.name.indexOf("Sonia ") > 0) {
                        gb = element;
                    } else if (element.name.indexOf("Aria ") > 0) {
                        us = element;
                    } else if (element.name.indexOf("Aaron") > 0) {
                        us = element;
                    }

                    if (element.lang == ('en-US') && typeof (us) == "undefined") {
                        us = element;
                    } else if (element.lang == ('en-GB') && typeof (gb) == "undefined") {
                        gb = element;
                    }
                }
            }
        }

        //朗读
        let content, vid;
        function f_read(voiceId) {
            init_v();
            window.speechSynthesis.cancel();//先尝试关闭正在播放的
            if (vid !== voiceId) {
                vid = voiceId;
                if (voiceId === 1) {
                    utterance.voice = gb;
                } else {
                    utterance.voice = us;
                }
            }
            //内容
            utterance.text = content.value;
            window.speechSynthesis.speak(utterance);
        }

        //保存
        function f_save() {
            //内容
            console.log(localStorage.key(2));
            let val = document.getElementById('t').value;
            if (val !== '') {
                let index = localStorage.getItem('ls_index');
                if (index == null) {
                    localStorage.setItem('1', val);
                    localStorage.setItem('ls_index', '1');
                    f_insert(1, val);
                } else {
                    let newIndex = (Number(index) + 1).toString();
                    localStorage.setItem(newIndex, val);
                    localStorage.setItem('ls_index', newIndex);
                    f_insert(newIndex, val);
                }
            }
        }

        //del
        function del(index) {
            let tl = document.getElementById('text_list');
            tl.removeChild(document.getElementById("l" + index));
            localStorage.removeItem(index.toString());
        }

        //设置当前
        function set_now(val) {
            document.getElementById('t').value = val;
        }

        let tl;
        //初始列表
        function f_init() {
            content = document.getElementById('t');
            tl = document.getElementById('text_list');
            let index = Number(localStorage.getItem('ls_index'));
            if (index !== 0) {
                for (let i = 1; i <= index; i++) {
                    let word = localStorage.getItem(i.toString());
                    if (word !== null) {
                        f_insert(i, word);
                    }
                }
            }
        }

        //建行
        function f_insert(i, word) {
            tl.innerHTML += "<li id='l" + i + "'>" +
                "<span onclick='set_now(this.innerText)'>" + word + "</span> "
                + "<button onclick='del(" + i + ")'>删除</button> </li>"
        }
    </script>
</head>

<body style="text-align: center;" onload="f_init();">
    <button onclick="f_read(1)" style="margin-right:29px;">开始朗读(伦敦)</button>
    <button onclick="f_read(2)" style="margin-right:29px;">开始朗读(美国)</button>
    <button onclick="f_save()">本地保存</button>
    <br>
    <label for="t">英语内容</label><textarea id="t"
        style="width: 400px;height: 60px;">look at my eye,Hi! I'm Amy,wow</textarea>
    <div style="width: 400px;height: 60px;margin: 0 auto;">
        <ul id="text_list">
        </ul>
    </div>
    <div id="dbg"></div>
</body>
<html>